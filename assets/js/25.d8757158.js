(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{190:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("ipnoneX的分辨率为2688*1242，这个表示的是iphoneX在水平和竖直方向分别具有的像素点，这里所指的像素是物理单位。")]),t._v(" "),s("p",[t._v("为了说明什么是设备独立像素，举个例子：")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("上图中黑色手机的物理尺寸与白色手机相同，分辨率是白色手机的两倍，理论上来说，在白色手机上同样大小的图片和文字在黑色手机上会被缩放一倍，因为它的分辨率高了一倍，但事实是他们所展示的界面的比例都是基本类似的。伟大的产品经理乔布斯在iphone4的发布会上首次提出了 **Retina Display（屏幕视网膜）**的概念正式解决了这个问题。在iphone4中，把2*2个物理像素当作一个像素去使用，这样使得屏幕看起来更为清晰，元素的大小也不会改变。")]),t._v(" "),s("p",[t._v("实际上显示的结果应该如下所示，比如渲染一根宽度为100高度为1的线条，那么在水平和竖直的方向上，白色手机会分别使用100个物理像素和1个物理像素点去渲染，而黑色手机会使用200个物理像素点和2个物理像素点去渲染。所以最终，黑色手机渲染出来的效果更为清晰而元素看起来也是一样大的。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("一般来说的视口包括三种：布局视口、视觉视口和理想视口，以下用几张图来进行说明")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("所以，布局视口是网页布局的基准窗口，在PC浏览器上，布局视口就等于当前浏览器的窗口大小（不包括borders 、margins、滚动条）。")]),t._v(" "),s("p",[t._v("在移动端，布局视口被赋予一个默认值，大部分为980px，这保证PC的网页可以在手机浏览器上呈现，但是非常小，用户可以手动对网页进行放大。")]),t._v(" "),s("p",[t._v("我们可以通过调用document.documentElement.clientWidth / clientHeight来获取布局视口大小。")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("p",[t._v("视觉视口默认等于当前浏览器的窗口大小（包括滚动条宽度）。")]),t._v(" "),s("p",[t._v("当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是缩放会改变视觉视口的大小。")]),t._v(" "),s("p",[t._v("例如：用户将浏览器窗口放大了200%，这时浏览器窗口中的CSS像素会随着视觉视口的放大而放大，这时一个CSS像素会跨越更多的物理像素，相对的，视觉视口就会变小。")]),t._v(" "),s("p",[t._v("所以，布局视口会限制你的CSS布局而视觉视口决定用户具体能看到什么。")]),t._v(" "),s("p",[t._v("我们可以通过调用window.innerWidth / innerHeight来获取视觉视口大小。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("上面在介绍CSS像素时曾经提到页面的缩放系数 = CSS像素 / 设备独立像素，实际上说页面的缩放系数 = 理想视口宽度 / 视觉视口宽度更为准确。")]),t._v(" "),s("p",[t._v("所以，当页面缩放比例为100%时，CSS像素 = 设备独立像素，理想视口 = 视觉视口。")]),t._v(" "),s("p",[t._v("我们可以通过调用screen.width / height来获取理想视口大小。")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),s("p",[t._v("使用vw我学着写了一个 "),s("code",[t._v("loader")]),t._v(": "),s("a",{attrs:{href:"https://github.com/Chechengyi/px2vw-css-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Chechengyi/px2vw-css-loader"),s("OutboundLink")],1)]),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),s("p",[t._v("让设计给一张1px像素点的图，然后如果是调整图的位置和 repeat方向。")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"移动端适配问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端适配问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 移动端适配问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1、一些概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、一些概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、一些概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-1-设备独立像素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-设备独立像素","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.1 设备独立像素")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://s1.ax1x.com/2020/05/04/YPuehQ.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://s1.ax1x.com/2020/05/04/YPMNO1.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("设备独立像素就是这样一个单位，用来告诉手机在界面上显示的元素大小是多少，简称"),e("strong",[this._v("DIP")]),this._v("或者"),e("strong",[this._v("DP")]),this._v("。以上所说的线条，宽100高1，就是宽100DP，高1DP。比如iphoneX手机水平和竖直方向的设备独立像素应该是375*812。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-2-设备像素比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-设备像素比","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.2 设备像素比")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("设备像素比")]),this._v(" 简称为 "),e("strong",[this._v("dpr")]),this._v("。指的是物理像素和设备独立像素的比值。可以使用 "),e("code",[this._v("window.devicePixelRatio")]),this._v(" 来获取dpr，在css中可以使用媒体查询来区分dpr。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-min-device-pixel-ratio")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(","),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-device-pixel-ratio")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1-3-css像素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-css像素","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.3 CSS像素")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在写 "),s("code",[t._v("CSS")]),t._v(" 的时候，用到的单位是 "),s("code",[t._v("px")]),t._v(" ，当页面的缩放比例为100%的时候，一个 "),s("code",[t._v("CSS")]),t._v(" 像素等于一个设备独立像素。"),s("code",[t._v("css")]),t._v(" 像素是很容易被改变的，当用户对浏览器进行了放大，"),s("code",[t._v("CSS")]),t._v(" 像素也会被放大，这时候一个 "),s("code",[t._v("CSS")]),t._v(" 像素比一个设备独立像素所占的物理像素更多， "),s("code",[t._v("页面的缩放系数=CSS像素/设备独立像素")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-4-视口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-视口","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4 视口")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"_1-4-1-布局视口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-布局视口","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4.1 布局视口")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://s1.ax1x.com/2020/05/04/YP8lRS.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("布局视口(layout viewport)")]),this._v("：当我们以百分比来指定一个元素的大小时，它的计算值是由这个元素的包含块计算而来的。当这个元素是最顶级的元素时，它就是基于布局视口来计算的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"_1-4-2-视觉视口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-视觉视口","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4.2 视觉视口")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://s1.ax1x.com/2020/05/04/YP8hRO.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("视觉视口(visual viewport)")]),this._v("：用户通过屏幕真实看到的区域。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"_1-4-3-理想视口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-理想视口","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4.3 理想视口")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("布局视口在移动端展示的效果并不是一个理想的效果，所以 "),e("strong",[this._v("理想视口(ideal viewport)")]),this._v(" 就诞生了：网站页面在移动端展示的理想大小。在浏览器调试移动端时页面上给定的像素大小就是理想视口大小，它的单位正是设备独立像素。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2-meta-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-meta-viewport","aria-hidden":"true"}},[this._v("#")]),this._v(" 2 "),e("strong",[this._v("Meta viewport")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("可以借助"),e("code",[this._v("<meta />")]),this._v(" 标签来在开发的时候设置视口、缩放等等从而让移动端得到更好的展示效果。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[this._v('<meta name="viewport"content="width=device-width; initial-scale=1; maximum-scale=1; minimum-scale=1; user-scalable=no;">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("上面是 "),e("code",[this._v("viewport")]),this._v(" 的一个设置，来看看其中具体的含义：")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("strong",[t._v("width")]),t._v(": 定义布局视口的宽度，可以设置一个值，如300，也可以设置 "),s("code",[t._v("device-width")]),t._v(" 意思为布局视口为设备的宽度，这里的单位就是设备独立像素，通过实践发现设置比设备原本的设备独立像素小时不生效。")]),t._v(" "),s("li",[s("strong",[t._v("height")]),t._v(": 与width对应，设置布局视口的高度。")]),t._v(" "),s("li",[s("strong",[t._v("initial-scale")]),t._v(": 初始缩放比例，也即是当页面第一次 load 的时候缩放比例。")]),t._v(" "),s("li",[s("strong",[t._v("maximum-scale")]),t._v(": 允许用户缩放到的最大比例。")]),t._v(" "),s("li",[s("strong",[t._v("minimum-scale")]),t._v(" 允许用户缩放到的最小比例。")]),t._v(" "),s("li",[s("strong",[t._v("user-scalable")]),t._v(": 用户是否可以手动缩放")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("可见为什么在开发移动端网页时，需要设置以上的 "),e("code",[this._v("<meta />")]),this._v(" 标签了，就是为了让布局视口的宽度与设备的宽度相等。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在此也可以引出来经典的1px边框像素的问题，在dpr大于1的屏幕上，写的1px设计上会被多个物理像素渲染。通过设置 "),e("code",[this._v("viewport")]),this._v(" 是可以解决这一问题的，让CSS像素去等于真正的物理像素。前面提到过："),e("code",[this._v("页面的缩放系数=CSS像素/设备独立像素")]),this._v(" 。 比如在dpr为2的手机上，当页面的缩放系数为1的时候，1px等于1设备独立像素，所以1px其实会被2x2个物理像素渲染，如果我们将页面的缩放系数设为0.5的话，那么 2px才等于1设备独立像素，这里的1px就能真正的被1x1个物理像素去渲染了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3-移动端适配方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-移动端适配方案","aria-hidden":"true"}},[this._v("#")]),this._v(" 3 移动端适配方案")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-1-使用rem-lib-flexible-px2rem-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-使用rem-lib-flexible-px2rem-loader","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.1 使用rem(lib-flexible + px2rem-loader)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个的原理其实给根节点设置 "),e("code",[this._v("font-size")]),this._v("，引入 "),e("code",[this._v("lib-flexible")]),this._v(" 文件，它会将 "),e("code",[this._v("html")]),this._v(" 根元素的字体大小设置为屏幕宽度除以10。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("rem 作用于非根元素时，相当于根元素的字体大小，作用于根元素字体大小时，相对于其初始字体大小")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("根据这个特性就，在 "),s("code",[t._v("webpack")]),t._v(" 打包的过程中，将写的px单位转换为 "),s("code",[t._v("rem")]),t._v(" 单位，依次做到了适配不同的屏幕宽度。 比如，UI给出的视觉稿宽度一般都是750。 "),s("code",[t._v("px2rem-loader")]),t._v(" 有一个配置属性是 "),s("code",[t._v("remUnit")]),t._v("，通常情况下设置为75， 因为配合 "),s("code",[t._v("lib-flexible")]),t._v(" "),s("code",[t._v("1em = 75")]),t._v("。 如果此时写了一个 "),s("code",[t._v("div")]),t._v(" 的宽度是 75px, 那么最终就会被转为 "),s("code",[t._v("1em")]),t._v(" 这个单位。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("然后来到了来到实际屏幕的设备上，比如是 "),s("code",[t._v("375px")]),t._v(" 宽的屏幕，此时 "),s("code",[t._v("html")]),t._v(" 元素的 "),s("code",[t._v("font-size")]),t._v(" 的值被 "),s("code",[t._v("lib-flexible")]),t._v(" 文件设置为了 "),s("code",[t._v("37.5")]),t._v("。 "),s("code",[t._v("div")]),t._v(" 的宽度写的是 "),s("code",[t._v("1em")]),t._v("， 此时就是 "),s("code",[t._v("37.5px")]),t._v(" 宽。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("当然，在实际的使用中，屏幕的或许是会改变的，所以 "),s("code",[t._v("lib-flexible")]),t._v(" 监听了 "),s("code",[t._v("resize")]),t._v(" 事件去动态的设置 "),s("code",[t._v("html")]),t._v(" 的 "),s("code",[t._v("font-size")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-2-使用vw"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-使用vw","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.2 使用vw")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("使用 "),s("code",[t._v("rem")]),t._v(" 是有缺陷的，首先它要设置根元素的 "),s("code",[t._v("font-size")]),t._v("，然后它还需要去监听窗口大小的改变动态设置。vw是 css 新给出的一个单位，"),s("code",[t._v("100vw")]),t._v(" 就等于当前屏幕的宽度。其实和 "),s("code",[t._v("rem")]),t._v(" 一样，使用这个方案也是借助一个等比缩放原理。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_4-1px边框问题，以及图片高清方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1px边框问题，以及图片高清方案","aria-hidden":"true"}},[this._v("#")]),this._v(" 4 1px边框问题，以及图片高清方案")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("之前就提到过，在页面的 "),e("code",[this._v("devicePixelRatio")]),this._v(" 为2的设备上，缩放系数为1的时候，此时 css中的 1px 像素等于 1设备独立像素 等于 2*2 个物理像素。所以此时写 1px 高的话实际上竖直方向会被两个物理像素渲染。这时，个别眼尖的设计师在视觉走查的时候就要找到你了：\b这个边框的宽度不是 1px 的啊。 那我们如何才能做到，真正的使用 1个物理像素去渲染呢？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用background-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用background-image","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用background-image")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"box-shadow模拟边框"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#box-shadow模拟边框","aria-hidden":"true"}},[this._v("#")]),this._v(" box-shadow模拟边框")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("background-image-1px")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-shadow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inset 0px -1px 1px -1px #c8c7cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"伪元素加-transform"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素加-transform","aria-hidden":"true"}},[this._v("#")]),this._v(" 伪元素加 + transform")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".borderTrans")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".borderTrans::after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);e.default=r.exports}}]);